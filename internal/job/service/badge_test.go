package service

import (
	"encoding/hex"
	"encoding/json"
	"fmt"
	"log"
	"testing"
)

func TestService_handleURI(t *testing.T) {
	input := "0xe33adcc3000000000000000000000000000000000000000000000000000000000000277a000000000000000000000000000000000000000000000000000000000000006000000000000000000000000000000000000000000000000000000000000001a00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000009fa4082b000000000000000000000000000000000000000000000000000000000000006400000000000000000000000000000000000000000000000000000000000000a000000000000000000000000000000000000000000000000000000000000000e0000000000000000000000000000000000000000000000000000000000000000fe4bba5e5a4aae59d8ae7ae80e4bb8b00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000035697066733a2f2f516d554d5a73655a4d3767674b4b6157716161515a33786239754b53584762334c676461755a7948366376356d7600000000000000000000000000000000000000000000000000000000000000000000000000000000000041cfd2721fb7709b56b6481c7585c64987483de57c7eed4a862833d978b8816cf1624c9f3e715444b8bccecd5f9178f933b04d26e0244714805acdf8652943a5001b00000000000000000000000000000000000000000000000000000000000000"
	decodedSig, err := hex.DecodeString(input[2:10])
	if err != nil {
		log.Fatal(err)
	}
	method, err := questMinterAbi.MethodById(decodedSig)
	fmt.Println(decodedSig)
	if err != nil {
		fmt.Println("Failed to find method: ", err)
		return
	}
	decodedData, err := hex.DecodeString(input[10:])
	if err != nil {
		log.Fatal(err)
	}
	test := make(map[string]interface{})
	//var data interface
	err = method.Inputs.UnpackIntoMap(test, decodedData)
	if err != nil {
		return
	}
	fmt.Printf("%+v\n", test)
	test2, _ := json.Marshal(test)
	//fmt.Printf("%+v\n", test["questData"])
	fmt.Println(string(test2))
	fmt.Println(method.Name)
}
